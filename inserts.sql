INSERT INTO statements (text, isTrue) VALUES 
('Eine Methode muss eine einzigartige Bezeichnung haben.',0),
('Eine Methode muss einen Rückgabetyp haben.',1),
('Eine Methode braucht nicht zwingend Übergabeparameter, denn Sie ist innerhalb des Objekts und kann damit auf private Felder zugreifen.',1),
('Ein Objekt darf eine bis viele Klassen enthalten.',0),
('Die Sichtbarkeit "protected" steht für "nur in dieser Klasse und Kinderklassen sichtbar".',1),
('Abstract Methoden können überschrieben werden.',0),
('Virtual Methoden können überschrieben werden.',1),
('Abstract Klassen sind Vorlagen für Objekte.',0),
('Override wird genutzt, um virtuelle Methoden der Elternklasse zu überschreiben.',1),
('Durch "Kind:<Klassenname>" erbt diese Klasse von "<Klassenname> "',1),
('Polymorphismus bedeutet z.B., dass eine Liste Objekte mehrerer Klassen verwalten kann.',1),
('Abstract-Methoden können nur in abstract-Klassen enthalten sein.',1),
('Abstract-Methoden müssen in allen erbenden Klassen überschrieben werden.',0),
('Eigenschaften sind die C# Version von gettern/settern.',1),
('Eigenschaften werden genutzt, um den Zugriff auf private Felder (Attribute) zu steuern.',1),
('Der Konstruktor soll sicherstellen, dass sich ein erzeugtes Objekt in einem validen Zustand befindet.',1),
('Eine Klasse kann mehrere Konstruktoren zur Verfügung stellen.',1),
('Methoden sind spezielle Konstruktoren.',0),
('Eine Klasse kann mehrere Konstruktoren zur Verfügung stellen. Das nennt man "Überladung".',1),
('Prozedurale Programmierung zeichnet sich durch den Einsatz von Unterprogrammen, sogenannten Prozeduren oder Funktionen, aus.',1),
('Bei der Imperativen Programmierung entsteht "Spaghetticode", weil der Programmablauf durch Sprungmarken wie z.B. "goto" gesteuert wird.',1),
('Bei der Prozeduralen Programmierung erfolgt der Zugriff auf private Daten nur über Methoden.',0),
('Bei der Objektorientieren Programmierung erfolgt der Zugriff auf private Daten nur über Operationen (Methoden).',1),
('Das Geheimnisprinzip sagt, dass Daten von Außen nicht sichtbar sind.',1),
('Statische Attribute können nicht verändert werden.',0),
('Konstruktoren sind "verkettet", wenn ein Konstruktor bestimmte Argumente an einen bereits vorhandenen Konstruktor weitergibt.',1),
('Die Kombination aus Bezeichnung und die Liste der Parameter einer Methode muss einzigartig sein.',1),
('Ein Konstruktor muss einen Rückgabetyp haben.',0),
('Eine Methode benötigt immer Übergabeparameter, damit Sie Werte hat, mit denen sie arbeiten kann.',0),
('Ein Objekt muss eine bis viele Klassen enthalten.',0),
('K hat verkette Konstruktoren.',1),
('K hat zwei Konstruktoren.',1),
('C ist eine Eigenschaft.',1),
('Ein Objekt kann erzeugt werden mit K k = new K(1,2);',0),
('C ist Schreibgeschützt.',1),
('Der Wert von b kann nach Objekterzeugung beliebig geändert werden.',0),
('Die Sichtbarkeit "protected" steht für "nur in dieser Klasse und erbenden Klasse sichtbar".',1),
('Abstract Methoden müssen überschrieben werden.',1),
('Virtual Methoden müssen überschrieben werdne.',0),
('Abstract Klassen sind Vorlagen für Klassen.',1),
('Override wird genutzt, um absrakte Methoden der Elternklasse zu überschreiben.',1),
('Durch :base() kann auf Konstruktoren der Mutterklasse zugegriffen werden.',1),
('Polymorphismus bedeutet, dass eine Klasse von mehreren Klassen erben kann.',0),
('Abstract-Methoden können nur in static-Klassen enthalten sein.',0),
('Abstract-Methoden müssen in den ersten  nicht-abstract-Kinderklassen überschrieben werden..',1),
('In Java würde man z.B. eine Methode getBeispielwert entwerfen, um auf das Attribut beispielwert zugreifen zu könnn.',1),
('Um den Zugriff auf private Felder (Attribute) zu ermöglichen, muss die Sichtbarkeit von private auf public geändert werden.',0),
('Jede Klasse besitzt mindestens einen Konstruktor.',1),
('Die Signaturen der Konstruktoren müssen einzigartig sein.',1),
('Konstruktoren sind spezielle Methoden.',1),
('Eine Klasse kann mehrere Konstruktoren zur Verfügung stellen. Das nennt man "Verkettung".',0),
('Imperative Programmierung zeichnet sich durch den Einsatz von Unterprogrammen, sogenannten Prozeduren oder Funktionen, aus.',0),
('Bei der Imperativen Programmierung kann der Quelltext von "oben nach unten" gelesen werden.',0),
('Bei der Prozeduralen Programmierung existieren keine privaten Daten, alles ist manipulierbar.',1),
('Bei der Objektorientierten Programmierung existieren keine privaten Daten, alles ist manipulierbar.',0),
('Das Prinzip der Datenkapselung sagt, dass Daten von Außen nicht sichtbar sind.',1),
('Wenn ein Objekt den Wert eines statischen Attributs verändert, sind alle anderen Objekte der gleichen Klasse davon betroffen.',1),
('Konstruktorenverkettung wird mit dem Schlüsselwort override eingeleitet.',0)
;
